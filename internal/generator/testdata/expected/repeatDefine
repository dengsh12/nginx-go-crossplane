/**
 * Copyright (c) F5, Inc.
 *
 * This source code is licensed under the Apache License, Version 2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */

// Code generated by generator; DO NOT EDIT.
// All the definitions are extracted from the source code
// If you found some definitions here wrong, you can create an issue here https://github.com/nginxinc/nginx-go-crossplane/issues
// Each bit mask describes these behaviors:
//   - how many arguments the directive can take
//   - whether or not it is a block directive
//   - whether this is a flag (takes one argument that's either "on" or "off")
//   - which contexts it's allowed to be in

package crossplane

//nolint:gochecknoglobals
var directives = map[string][]uint{
    "my_directive_1": {
        ngxHTTPMainConf | ngxConfTake2,
        ngxHTTPMainConf | ngxConfTake1,
    },
    "my_directive_2": {
        ngxHTTPMainConf | ngxConfFlag,
        ngxHTTPMainConf | ngxConfNoArgs,
    },
    "my_directive_3": {
        ngxHTTPMainConf | ngxHTTPSrvConf | ngxConfNoArgs,
        ngxHTTPMainConf | ngxConfTake2,
    },
}

// Match is a matchFunc for parsing an NGINX config that contains the
// preceding directives.
func Match(directive string) ([]uint, bool) {
    m, ok := directives[directive]
    return m, ok
}